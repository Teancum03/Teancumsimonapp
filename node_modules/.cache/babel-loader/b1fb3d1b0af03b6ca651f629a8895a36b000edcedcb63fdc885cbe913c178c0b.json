{"ast":null,"code":"var _jsxFileName = \"/Users/teancumscotosn/Documents/GitHub/Teancumsimonapp/src/App.js\";\nimport React, { Component } from 'react';\nimport './SimonGame.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass SimonGame extends Component {\n  constructor(props) {\n    super(props);\n    this.playSound = event => {\n      const color = event.target.id;\n      const {\n        index,\n        steps\n      } = this.state;\n      this.sounds[color].currentTime = 0;\n      this.sounds[color].play();\n      if (color === steps[index]) {\n        this.setState(prevState => ({\n          index: prevState.index + 1\n        }), () => {\n          if (this.state.index === this.state.round) {\n            this.setState(prevState => ({\n              index: 0,\n              round: prevState.round\n            }), () => {\n              this.gameConsole.innerHTML = 'Great job!';\n              this.generateStep();\n              this.showSteps();\n            });\n          }\n        });\n      } else {\n        if (this.state.round === 0) {\n          this.gameConsole.innerHTML = 'Press the \"Start game\" button!';\n        } else {\n          this.gameConsole.innerHTML = 'Game over! You reached round ' + this.state.round;\n          this.resetSimon();\n        }\n      }\n    };\n    this.generateStep = () => {\n      const {\n        buttons\n      } = this.state;\n      const randomColor = buttons[Math.floor(Math.random() * buttons.length)];\n      this.setState(prevState => ({\n        steps: [...prevState.steps, randomColor],\n        round: prevState.round + 1\n      }));\n    };\n    this.playStep = step => {\n      const hover = document.getElementById(step);\n      hover.classList.add('hover');\n      this.sounds[step].play();\n      setTimeout(() => {\n        hover.classList.remove('hover');\n      }, 300);\n    };\n    this.showSteps = () => {\n      this.innerCircle.innerHTML = String(this.state.round);\n      let num = 0;\n      const moves = setInterval(() => {\n        this.playStep(this.state.steps[num]);\n        this.gameConsole.innerHTML = 'Wait...';\n        num++;\n        if (num >= this.state.steps.length) {\n          this.gameConsole.innerHTML = 'Repeat the steps!';\n          clearInterval(moves);\n        }\n      }, 600);\n    };\n    this.resetSimon = () => {\n      this.innerCircle.innerHTML = String(this.state.round);\n      this.setState({\n        round: 0,\n        index: 0,\n        steps: []\n      });\n    };\n    this.startGame = () => {\n      this.resetSimon();\n      this.generateStep();\n      this.showSteps();\n    };\n    this.state = {\n      round: 0,\n      index: 0,\n      steps: [],\n      buttons: ['green', 'red', 'yellow', 'blue']\n    };\n    this.sounds = {\n      green: new Audio('https://s3.amazonaws.com/freecodecamp/simonSound1.mp3'),\n      red: new Audio('https://s3.amazonaws.com/freecodecamp/simonSound2.mp3'),\n      yellow: new Audio('https://s3.amazonaws.com/freecodecamp/simonSound3.mp3'),\n      blue: new Audio('https://s3.amazonaws.com/freecodecamp/simonSound4.mp3')\n    };\n  }\n  componentDidMount() {\n    this.colorButtons = document.querySelectorAll('.button');\n    this.gameConsole = document.querySelector('.console');\n    this.innerCircle = document.querySelector('.inner-circle');\n    this.buttonStart = document.querySelector('button');\n    this.colorButtons.forEach(button => {\n      button.addEventListener('click', this.playSound);\n    });\n    this.buttonStart.addEventListener('click', this.startGame);\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"console\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inner-circle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Start game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), this.state.buttons.map(color => /*#__PURE__*/_jsxDEV(\"div\", {\n        id: color,\n        className: \"button\",\n        style: {\n          backgroundColor: color\n        }\n      }, color, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default SimonGame;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","SimonGame","constructor","props","playSound","event","color","target","id","index","steps","state","sounds","currentTime","play","setState","prevState","round","gameConsole","innerHTML","generateStep","showSteps","resetSimon","buttons","randomColor","Math","floor","random","length","playStep","step","hover","document","getElementById","classList","add","setTimeout","remove","innerCircle","String","num","moves","setInterval","clearInterval","startGame","green","Audio","red","yellow","blue","componentDidMount","colorButtons","querySelectorAll","querySelector","buttonStart","forEach","button","addEventListener","render","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","style","backgroundColor"],"sources":["/Users/teancumscotosn/Documents/GitHub/Teancumsimonapp/src/App.js"],"sourcesContent":["import React, { Component } from 'react'\nimport './SimonGame.css'\nclass SimonGame extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      round: 0,\n      index: 0,\n      steps: [],\n      buttons: ['green', 'red', 'yellow', 'blue'],\n    }\n    this.sounds = {\n      green: new Audio('https://s3.amazonaws.com/freecodecamp/simonSound1.mp3'),\n      red: new Audio('https://s3.amazonaws.com/freecodecamp/simonSound2.mp3'),\n      yellow: new Audio(\n        'https://s3.amazonaws.com/freecodecamp/simonSound3.mp3'\n      ),\n      blue: new Audio('https://s3.amazonaws.com/freecodecamp/simonSound4.mp3'),\n    }\n  }\n\n  componentDidMount() {\n    this.colorButtons = document.querySelectorAll('.button')\n    this.gameConsole = document.querySelector('.console')\n    this.innerCircle = document.querySelector('.inner-circle')\n    this.buttonStart = document.querySelector('button')\n    this.colorButtons.forEach((button) => {\n      button.addEventListener('click', this.playSound)\n    })\n    this.buttonStart.addEventListener('click', this.startGame)\n  }\n\n  playSound = (event) => {\n    const color = event.target.id\n    const { index, steps } = this.state\n    this.sounds[color].currentTime = 0\n    this.sounds[color].play()\n    if (color === steps[index]) {\n      this.setState(\n        (prevState) => ({\n          index: prevState.index + 1,\n        }),\n        () => {\n          if (this.state.index === this.state.round) {\n            this.setState(\n              (prevState) => ({\n                index: 0,\n                round: prevState.round,\n              }),\n              () => {\n                this.gameConsole.innerHTML = 'Great job!'\n                this.generateStep()\n                this.showSteps()\n              }\n            )\n          }\n        }\n      )\n    } else {\n      if (this.state.round === 0) {\n        this.gameConsole.innerHTML = 'Press the \"Start game\" button!'\n      } else {\n        this.gameConsole.innerHTML =\n          'Game over! You reached round ' + this.state.round\n        this.resetSimon()\n      }\n    }\n  }\n\n  generateStep = () => {\n    const { buttons } = this.state\n    const randomColor = buttons[Math.floor(Math.random() * buttons.length)]\n    this.setState((prevState) => ({\n      steps: [...prevState.steps, randomColor],\n      round: prevState.round + 1,\n    }))\n  }\n\n  playStep = (step) => {\n    const hover = document.getElementById(step)\n    hover.classList.add('hover')\n    this.sounds[step].play()\n    setTimeout(() => {\n      hover.classList.remove('hover')\n    }, 300)\n  }\n\n  showSteps = () => {\n    this.innerCircle.innerHTML = String(this.state.round)\n    let num = 0\n    const moves = setInterval(() => {\n      this.playStep(this.state.steps[num])\n      this.gameConsole.innerHTML = 'Wait...'\n      num++\n      if (num >= this.state.steps.length) {\n        this.gameConsole.innerHTML = 'Repeat the steps!'\n        clearInterval(moves)\n      }\n    }, 600)\n  }\n\n  resetSimon = () => {\n    this.innerCircle.innerHTML = String(this.state.round)\n    this.setState({\n      round: 0,\n      index: 0,\n      steps: [],\n    })\n  }\n\n  startGame = () => {\n    this.resetSimon()\n    this.generateStep()\n    this.showSteps()\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"console\"></div>\n        <div className=\"inner-circle\"></div>\n        <button>Start game</button>\n        {this.state.buttons.map((color) => (\n          <div\n            key={color}\n            id={color}\n            className=\"button\"\n            style={{ backgroundColor: color }}\n          ></div>\n        ))}\n      </div>\n    )\n  }\n}\n\nexport default SimonGame\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}